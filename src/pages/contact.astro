---
import ContactLayout from '@src/layouts/ContactLayout.astro'
import { ContactForm } from '@src/client/ContactForm.tsx'
import { getLanguage, useLocale } from '@src/lib/i18n'

const lang = getLanguage(Astro.url)
const t = useLocale(lang)

const API_URL = import.meta.env.API_URL
let fetchError: string[] | null = null
let apiError: string | null = null

try {
  if (!API_URL) {
    throw new Error('API_URL is not defined')
  }

  const headers = new Headers()
  const request = Astro.request
  const cookieRequest = request.headers.get('cookie')

  if (cookieRequest) {
    headers.set('cookie', cookieRequest)
  }

  const resp = await fetch(API_URL + '/contact', {
    credentials: 'include',
    headers: headers
  })

  if (resp.ok) {
    const token = resp.headers.get('x-csrf-token') ?? ''
    const set_cookies = resp.headers.get('set-cookie')

    if (token) {
      Astro.cookies.set('signed-token', token, {
        path: '/',
        httpOnly: true
      })
    }

    if (set_cookies) {
      const cookiesHeaders = Astro.cookies.headers()

      for (const cookie of cookiesHeaders) {
        Astro.response.headers.append('set-cookie', cookie)
      }

      Astro.response.headers.append('set-cookie', set_cookies)
    }
  } else if (resp.status === 500) {
    apiError = t(
      'An internal server error occurred. Please contact me, by email or by my phone on the main page, about what happened or try again later.',
      'contact.page'
    )
  } else {
    const error = await resp.json()
    console.error(error)
  }
} catch (error) {
  fetchError = [
    t('Server is not responding.', 'contact.page'),
    t('Please try again later.', 'contact.page')
  ]
  console.error(error)
}
---

<ContactLayout title={t('contact')}>
  <div
    class='flex flex-col flex-1 bg-slate-500 w-full items-center drop-shadow sm:mt-11'
  >
    <div
      class='w-full sm:w-auto p-4 sm:p-14 flex flex-col flex-1 justify-center border border-gray-50 bg-slate-200'
    >
      {
        fetchError ? (
          <div class='text-2xl sm:text-3xl text-center font-semibold text-rose-600 mx-0 sm:mx-12 w-auto md:w-[800px]'>
            {fetchError.map((error) => (
              <p>{error}</p>
            ))}
          </div>
        ) : (
          <>
            <h1 class='text-2xl sm:text-4xl font-semibold text-gray-800 text-center'>
              {t('Talk to me', 'contact.page')}
            </h1>
            <p class='text-xl sm:text-2xl text-center text-slate-600 mt-2 mb-12'>
              {t(
                'Ask questions, send proposals, suggestions or request a quote.',
                'contact.page'
              )}
            </p>
            <ContactForm client:load lang={lang} apiError={apiError} />
          </>
        )
      }
    </div>
  </div>
</ContactLayout>
